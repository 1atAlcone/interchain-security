syntax = "proto3";

package interchain_security.ccv.provider.v1;

option go_package = "github.com/cosmos/interchain-security/x/ccv/provider/types";

import "gogoproto/gogo.proto";
import "interchain_security/ccv/v1/ccv.proto";
import "interchain_security/ccv/provider/v1/provider.proto";
import "interchain_security/ccv/consumer/v1/consumer.proto";
import "interchain_security/ccv/consumer/v1/genesis.proto";


// GenesisState defines the CCV provider chain genesis state
message GenesisState {
  uint64 valset_update_id = 1;
  // ConsumerState defines the state that the provider chain stores for each
  repeated ConsumerState consumer_states = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"consumer_states\""
  ];
  // UnbondingOp : vscID -> []chainID
  repeated interchain_security.ccv.v1.UnbondingOp unbonding_ops = 3
  [ (gogoproto.nullable) = false ];
  
  
  // ValsetBlockHeight 
  repeated ValsetUpdateIdToHeight valset_update_id_to_height = 4
  [ (gogoproto.nullable) = false ];

  repeated CreateConsumerChainProposal create_consumer_chain_proposals = 5
  [ (gogoproto.nullable) = false ];

  repeated StopConsumerChainProposal stop_consumer_chain_proposals = 6
  [ (gogoproto.nullable) = false ];

  Params params = 7
  [ (gogoproto.nullable) = false ];

  // MatureUnbondingOps : key -> UbdIndex ?
}

// consumer chain
message ConsumerState {
  string chain_id = 1;
  string channel_id = 2;
  string client_id = 3;
  uint64 initial_height = 4;
  bool lock_unbonding_on_timeout = 5;
  interchain_security.ccv.consumer.v1.GenesisState consumer_genesis = 6
  [ (gogoproto.nullable) = false ];
  repeated interchain_security.ccv.v1.ValidatorSetChangePacketData pending_valset_changes = 7
  [ (gogoproto.nullable) = false ];
  repeated string slash_downtime_ack = 8;
  // UnbondingOpIndex :  | chainID | vscID | -> UbdIndex
  repeated UnbondingOpIndex unbonding_ops_index = 9
  [ (gogoproto.nullable) = false ];
}

// UnbondingOpIndex defines the genesis information for each unbonding operations index 
// indexed by chain id and valset udpate id
message UnbondingOpIndex {
  uint64 valset_update_id = 1;
  repeated uint64 unbonding_op_index = 2;
}

// ValsetUpdateIdToHeight defines the genesis information for each valset udpate id to
// block height mapping.
message ValsetUpdateIdToHeight {
    uint64 valset_update_id = 1;
    uint64 height = 2;
}
